---
- name: Single-node readiness checks
  hosts: all
  gather_facts: true

  tasks:
    - name: Assert vCPU count
      ansible.builtin.assert:
        that: ansible_facts.processor_vcpus | int >= expected_vcpus
        fail_msg: "vCPU too low ({{ ansible_facts.processor_vcpus }} < {{ expected_vcpus }})"

    - name: Assert RAM (MB)
      ansible.builtin.assert:
        that: ansible_facts.memtotal_mb | int >= expected_ram_mb
        fail_msg: "RAM too low ({{ ansible_facts.memtotal_mb }} MB < {{ expected_ram_mb }} MB)"

    - name: Gather raw disk info (lsblk JSON)
      ansible.builtin.command: lsblk -b -J -o NAME,SIZE,TYPE
      register: lsblk_out
      changed_when: false

    - name: Parse lsblk JSON
      ansible.builtin.set_fact:
        lsblk_json: "{{ lsblk_out.stdout | from_json }}"

    - name: Compute largest disk size (GB)
      ansible.builtin.set_fact:
        disk_sizes_bytes: "{{ lsblk_json.blockdevices | selectattr('type','equalto','disk') | map(attribute='size') | list }}"
        largest_disk_gb: "{{ (disk_sizes_bytes | map('int') | max // (1024*1024*1024)) | int }}"

    - name: Assert at least one disk >= expected_root_disk_gb
      ansible.builtin.assert:
        that: largest_disk_gb | int >= expected_root_disk_gb
        fail_msg: "Largest disk is {{ largest_disk_gb }} GB, need >= {{ expected_root_disk_gb }} GB"

    # Networking checks
    - name: Collect all IPv4 addresses
      ansible.builtin.set_fact:
        ipv4_list: "{{ ansible_facts.all_ipv4_addresses | default([]) }}"

    - name: Assert node_ip present on some interface
      ansible.builtin.assert:
        that: node_ip in ipv4_list
        fail_msg: "Expected {{ node_ip }} not present on any interface. Got: {{ ipv4_list }}"

    - name: Check default gateway presence
      ansible.builtin.assert:
        that: ansible_facts.default_ipv4.gateway is defined
        fail_msg: "No default gateway detected"

    - name: Quick egress check (HEAD to quay.io)
      ansible.builtin.uri:
        url: https://quay.io
        method: HEAD
        return_content: no
        validate_certs: yes
        timeout: 10
      register: egress_test
      failed_when: egress_test.status not in [200,301,302]

    - name: Summary
      ansible.builtin.debug:
        msg:
          - "OK: vCPU={{ ansible_facts.processor_vcpus }}, RAM_MB={{ ansible_facts.memtotal_mb }}, LARGEST_DISK_GB={{ largest_disk_gb }}"
          - "OK: IPs={{ ipv4_list }}, GW={{ ansible_facts.default_ipv4.gateway }}"
